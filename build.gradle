plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'uk.ac.cardiff'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
ext.PROD_PASSWORD = System.getenv('PROD_PASSWORD')


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'

	//testCompileOnly 'org.projectlombok:lombok:1.18.24'

	implementation 'org.springframework.boot:spring-boot-tools:2.2.13.RELEASE'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
//	testCompileOnly 'org.projectlombok:lombok:1.18.24'


	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.security:spring-security-config'

	test
	testImplementation 'org.springframework.security:spring-security-test'


}

tasks.named('test') {
	useJUnitPlatform()
//	systemProperty 'spring.profiles.active', 'DEV'

}

build{
	ext.PROD_PASSWORD = System.getenv('PROD_PASSWORD')
	if ( project.hasProperty('jvmArgs') ) {
		jvmArgs = (project.jvmArgs.split("\\s+") as List)

	}
}

tasks.bootRun.configure {
	systemProperty("spring.profiles.active", "dev")
}

// Path: application-prod.properties
tasks.register('bootRunProd') {
	group = 'application'
	description = 'Runs this project as a production environment (mariaDB)'
	doFirst{
		tasks.bootRun.configure {
			systemProperty 'spring.profiles.active', 'prod'
		}
	}
	finalizedBy 'bootRun'
}
